# GitHub Actions Workflow for Releasing Changes
# The repository must be configured with read & write access to the GitHub Package that is being published

name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
      - name: Go Installation Information
        run: go version
      - name: Define Variables
        run: |
          echo "VERSION=$GITHUB_REF_NAME" >> "$GITHUB_ENV"
          echo "DOCKER_REPOSITORY=ghcr.io/${GITHUB_REPOSITORY,,}" >> "$GITHUB_ENV"
      - name: Build Binaries
        run: |
          GOOS=linux GOARCH=amd64 go build -ldflags "-X main.Version=${{ env.VERSION }}" -o "nddns_${{ env.VERSION }}_linux_amd64" ./cmd
          GOOS=linux GOARCH=arm64 go build -ldflags "-X main.Version=${{ env.VERSION }}" -o "nddns_${{ env.VERSION }}_linux_arm64" ./cmd
          GOOS=linux GOARCH=arm GOARM=7 go build -ldflags "-X main.Version=${{ env.VERSION }}" -o "nddns_${{ env.VERSION }}_linux_armv7" ./cmd
          GOOS=linux GOARCH=386 go build -ldflags "-X main.Version=${{ env.VERSION }}" -o "nddns_${{ env.VERSION }}_linux_386" ./cmd
          GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.Version=${{ env.VERSION }}" -o "nddns_${{ env.VERSION }}_darwin_amd64" ./cmd
          GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.Version=${{ env.VERSION }}" -o "nddns_${{ env.VERSION }}_darwin_arm64" ./cmd
          GOOS=windows GOARCH=amd64 go build -ldflags "-X main.Version=${{ env.VERSION }}" -o "nddns_${{ env.VERSION }}_windows_amd64.exe" ./cmd
          GOOS=windows GOARCH=386 go build -ldflags "-X main.Version=${{ env.VERSION }}" -o "nddns_${{ env.VERSION }}_windows_386.exe" ./cmd
      - name: GitHub - Publish Binaries to Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: nddns_*
      - name: Authenticate with Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker - Build Image
        run: docker build --build-arg VERSION="${{ env.VERSION }}" -t "${{ env.DOCKER_REPOSITORY }}:${{ env.VERSION }}" -t ${{ env.DOCKER_REPOSITORY }} .
      - name: Docker - Push Image
        run: docker push ${{ env.DOCKER_REPOSITORY }} --all-tags
